#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##### NOTE: This is a TEMPLATE file which can be copied and edited

##### Recipe properties

##mysql credentials
falcon.recipe.druid.mysql.username=testUser
falcon.recipe.druid.mysql.password=test


## data source to which data will be uploaded in druid
falcon.recipe.druid.dataSource=testData

## dir on which druid data will recide in hdfs will use combination of day,datasource to make it unique
falcon.recipe.druid.ingestDir=testDir

## queue name in which job will be launched
falcon.recipe.druid.queuename=default

## inputpaths to read hdfs data to be loaded
falcon.recipe.druid.inputpath=/user/2016-01-01/

## user name with which job will be launched
falcon.recipe.druid.username=testUser

##### Cluster properties
# Cluster where job should run
falcon.recipe.druid.cluster.name=primaryCluster

falcon.recipe.druid.cluster.validity.end=2016-03-13T00:00

falcon.recipe.druid.cluster.validity.start=2015-03-13T00:00

falcon.recipe.druid.cluster.frequency=days(1)

## Process Name
falcon.recipe.druid.process.name=druidLoader


## Input Feed properties
falcon.recipe.druid.input.feed=druid-feed

falcon.recipe.druid.input.feed.start=today(0,0)

falcon.recipe.druid.input.feed.end=today(0,0)

## temp dir to which druid job will write data
falcon.recipe.druid.tmp.dir=/tmp/inv

### Interval duration of data to be loaded will be used by druid to create segments
falcon.recipe.druid.interval1=${formatTime(dateOffset(instanceTime(), -1, 'DAY'),'yyyy-MM-dd')}
falcon.recipe.druid.interval2=${formatTime(dateOffset(instanceTime(), 1, 'DAY'),'yyyy-MM-dd')}

## Dir path where .json file will be stored
falcon.recipe.druid.jobDir=/user/path_to_json_file_in_hdfs

falcon.recipe.druid.workflow.name=druidLoader


## To be used to create dir in hdfs based on date of run
falcon.recipe.druid.date=${formatTime(dateOffset(instanceTime(), -1, 'DAY'),'yyyy-MM-dd')}